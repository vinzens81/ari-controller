akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  log-dead-letters-during-shutdown = false

  persistence {
    journal.leveldb.native = off
    journal.leveldb.dir = "target/leveldb"
    journal.plugin = "akka.persistence.journal.inmem"
    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  }

  kafka.consumer {
    wakeup-timeout = 30s
    metadata-request-timeout = 3s
    connection-checker {
      enable = true
      max-retries = 3
      check-interval = 3s
      backoff-factor = 2.0
    }
  }
  kafka.producer {
    kafka-clients {
      max.in.flight.requests.per.connection = 1
      request.timeout.ms = 4000
      delivery.timeout.ms = 10000
    }
  }

  actor {
    allow-java-serialization = true
  }
}

kafka {
  bootstrap-servers = "127.0.0.1:9092"
  bootstrap-servers = ${?KAFKA_BOOTSTRAP_SERVERS}
  consumer-group = "ari-controller"
  inbox-topic = "controller-inbox"
}

health {
  http-interface = localhost
  http-port = 8092
}

ari {
  command-timeout-in-ms = 10000
  answer-timeout-in-seconds = 10
  deletion-command-retries = 5
}
